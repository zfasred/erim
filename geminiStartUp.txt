Merhaba Gemini. Mevcut bir Django projesi üzerinde çalışıyoruz ve kaldığımız yerden devam edeceğiz. Lütfen aşağıdaki proje özetini ve kararları dikkate alarak bana yardımcı ol. Bu, bizim sohbet geçmişimiz olacak.

---
**PROJE ÖZETİ: EKONAZ**

1.  **Amaç:** Kullanıcıların yetkilerine göre modüller görebileceği bir portal oluşturmak.
2.  **Veritabanı:** Proje, mevcut bir PostgreSQL veritabanı (`db_backup.sql`) kullanılarak başlatıldı. `inspectdb` ile modeller oluşturuldu.
3.  **Modeller (`models.py`):**
    * Veritabanındaki `alan_adi_` şeklindeki isimlendirmeyi korumaya ve Django modellerinde `db_column='alan_adi_'` parametresini kullanmaya karar verdik.
    * Tüm modeller `core` adında bir uygulama içinde, `core/models.py` dosyasında toplandı.
    * `managed = False` ayarı korundu, veritabanı şeması manuel yönetilecek.
4.  **Kimlik Doğrulama:**
    * Kullanıcı şifrelemesi için Django'nun dahili, güvenli sistemi (`PBKDF2/Argon2`) kullanılıyor. Özel şifreleme yöntemlerinden vazgeçildi.
    * `createsuperuser` ile bir yönetici kullanıcısı oluşturuldu.
5.  **Proje Yapısı:**
    * Proje, standart Django mimarisine uygun hale getirildi. `ekonaz` adında bir proje ve `core` adında bir uygulama var.
    * `models.py`, `views.py`, `admin.py` gibi dosyalar `core` klasörünün içinde.
    * Statik dosyalar (`css`, `images`) için ana dizinde bir `static` klasörü oluşturuldu ve `settings.py`'da ayarlandı.
6.  **Mevcut Durum:**
    * Projenin dili Türkçe'ye çevrildi (`settings.py`).
    * Özelleştirilmiş bir giriş sayfası (`/`) oluşturuldu. Bu sayfa Django'nun hazır `LoginView`'ını kullanıyor.
    * Başarılı giriş yapan kullanıcı `/portal` adresine yönlendiriliyor.
    * `/portal` adresi için sol menüsü ve sağ içerik alanı olan bir HTML şablonu ve view (`portal_view`) oluşturuldu. Bu view `@login_required` ile korunuyor.

**SIRADAKİ ADIM:** Portal sayfasında, kullanıcının yetkilerine göre farklı modüllerin gösterilmesini sağlayan Django Permissions sistemini implemente etmek.
---